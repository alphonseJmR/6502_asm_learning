JSR main
LDX #$00	;load x with hex 00 (init value)
STX $00F0

sety:		;function to set Y reg as 0
LDY #$00	;load y with hex 00 (init value)
STY $00C0
JSR putx
RTS

putx:	
LDA #$0B
LDX $00F0
STA $04A0,X
INC $00F0
RTS

main:
JSR l_line_one
LDA #$0C
STA $0400
JSR l_line_two
LDA #$0A
STA $0401
JSR end

l_line_one:
LDA #$08	;load a with hex 08 as color
STA $0402	;store a at gpu_mem 0230
JSR sety
JSR w_one

l_line_two:
LDA #$0D	;load a with hex 08 as color
STA $0403	;store a at gpu_mem 0240
JSR sety
JSR w_two

w_one:
LDA #$04	;load a with hex 04 as color
LDY $00C0
CPY #$03	;compare y to set max value
INY		;increment Y
STA $0200,Y	;store a at gpu_mem 0200, offset by y
BMI w_one	;branch if c

LDA #$04
STA $0200
RTS

w_two:
LDA #$06	;load a with hex 04 as color
LDY $00C0
CPY #$06	;compare y to set max value
INY		;increment Y
STA $0220,Y	;store a at gpu_mem 0220, offset by y
BMI w_two	;branch if c

LDA #$06
STA $0220
RTS

end:
LDA #$05
STA $0404
BRK




